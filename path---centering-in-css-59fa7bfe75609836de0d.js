webpackJsonp([0x677e17068cfb],{512:function(n,a){n.exports={data:{site:{siteMetadata:{title:"🐟 Blog",author:"Yu Jinyan"}},markdownRemark:{id:"C:/Users/yujin/code/blog-gatsby/posts/centering-in-css.md absPath of file >>> MarkdownRemark",html:'<h2>水平居中</h2>\n<h3>水平居中行内元素（inline element）</h3>\n<p>在父级块级元素中使用 <code class="language-text">text-align: center</code>。</p>\n<h3>水平居中块级元素（block element）</h3>\n<p>在该元素上使用 <code class="language-text">margin: auto</code></p>\n<ul>\n<li>前提：该元素定义了 <code class="language-text">width</code> 属性。</li>\n<li>解释：块状盒子（block box）中 <code class="language-text">margin-left</code>、<code class="language-text">border-left</code>、<code class="language-text">padding-left</code>、<code class="language-text">width</code>、<code class="language-text">padding-right</code>、<code class="language-text">border-right</code>、 <code class="language-text">margin-right</code> 七个属性相加恒等于父容器盒子（container box）的 <code class="language-text">width</code>。浏览器平分父容器 <code class="language-text">width</code> 减去元素 <code class="language-text">width</code> 后的宽度给 <code class="language-text">margin-left</code> 和 <code class="language-text">margin-right</code>，达到居中的效果。</li>\n</ul>\n<h3>水平居中浮动元素</h3>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>\n    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.center</span> <span class="token punctuation">{</span>\n    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n    <span class="token property">margin-left</span><span class="token punctuation">:</span> -50%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>在需要居中的浮动元素的父容器上同样应用相同的 <code class="language-text">float</code> 会使容器收缩到该元素的宽度。将容器左边应用 <code class="language-text">margin-left</code> 或者 <code class="language-text">left</code> 为 50% 之后，由于子元素的宽度此时和父容器的宽度相同，可以应用 <code class="language-text">margin-left</code> 或者 <code class="language-text">left</code> 往回收 50%，达到居中的效果。</p>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.center</span> <span class="token punctuation">{</span>\n    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h2>竖直居中行内元素</h2>\n<h3>设置相同的 <code class="language-text">padding-top</code> 及 <code class="language-text">padding-down</code></h3>\n<p>在该行内元素或者父容器盒子上加入相同的 <code class="language-text">padding-top</code> 和 <code class="language-text">padding-bottom</code></p>\n<ul>\n<li>前提：父容器盒子 <code class="language-text">height: auto</code>。</li>\n<li>解释 1：盒子模型中，<code class="language-text">margin</code> 总是透明的，<code class="language-text">background</code> 显示在 <code class="language-text">border</code> 范围之内，包括 <code class="language-text">padding</code> 和内容盒子（content box）。</li>\n<li>解释 2：行内元素竖直方向的排布与 <code class="language-text">font-size</code>、<code class="language-text">line-height</code>、<code class="language-text">vertical-align</code> 有关。<code class="language-text">line-height</code> 与 <code class="language-text">font-size</code> 的差值分成两半加到行内元素的内容框（content box）后生成行内盒子（inline box）。某行内包含所有行内框的最小盒子定义为行框（line box），所有行框填满父级块状盒子。竖直方向上的 <code class="language-text">maring</code>、<code class="language-text">border</code>、<code class="language-text">padding</code> 不影响盒子的排布，这一效果有点类似绝对定位的元素抽身于文档流之外。</li>\n<li>解释 3：块状盒子设置了 <code class="language-text">height</code> 以后，<code class="language-text">padding-bottom</code> 可能会失效，视觉上达不到居中的效果。</li>\n</ul>\n<h3>令行内元素的 <code class="language-text">line-height</code> 等于父容器盒子的 <code class="language-text">height</code></h3>\n<ul>\n<li>局限：一般只适合文字只有单行的情况</li>\n<li>解释：这一技巧利用了 <code class="language-text">leading</code> 在内容框上下等量排布的特性。</li>\n</ul>\n<h3>利用 CSS <code class="language-text">table</code> 布局</h3>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.container span</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>\n    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h3>利用 <code class="language-text">flex</code> 布局</h3>\n<p>设置元素 <code class="language-text">margin: auto</code> 可以使元素在父容器中水平/竖直居中</p>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n \n<span class="token selector">.container .centered</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>如果 flexbox 中的元素为匿名元素，可以在父容器设置 <code class="language-text">justify-content</code> （<code class="language-text">flex-direction</code> 方向上）和 <code class="language-text">align-items</code> （与 <code class="language-text">flex-direction</code> 垂直方向上）属性为 <code class="language-text">center</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>在使用 <code class="language-text">flex</code> 布局的父容器中定义 <code class="language-text">justify-content</code> 和 <code class="language-text">align-items</code> 是通用的方法。如果能选择到容器中的元素话，给子元素应用 <code class="language-text">margin: auto</code> 的方法更佳。原因是这种方法提供了更好的回退机制，如果 <code class="language-text">flex</code> 不被支持，至少可以保证水平方向上的居中。前提是子元素是块级元素并且设置了 <code class="language-text">width</code>。</p>\n<h3>利用伪元素（pseudo-element）对齐</h3>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.container:before,\n.container .centered</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.container:before</span> <span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">\' \'</span><span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.centered</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h2>竖直居中块级元素</h2>\n<h3>绝对定位子元素</h3>\n<p>前提：定义子元素的 <code class="language-text">height</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.centered</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n    <span class="token property">margin-top</span><span class="token punctuation">:</span> -100px<span class="token punctuation">;</span> <span class="token comment">/* `height` 的一半 */</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h3>绝对定位子元素，配合 <code class="language-text">transform</code> 属性</h3>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.centered</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>解释：通过绝对定位将子元素向下移动父容器 <code class="language-text">height</code> 50% 长度的距离之后，需要再向上移动子元素 <code class="language-text">height</code> 50% 的长度。绝大部分 CSS 属性百分比的值都是相对父容器的；而 <code class="language-text">translate()</code> 中的百分比正好是相对于子元素本身的 <code class="language-text">height</code> 或者 <code class="language-text">width</code>。</p>\n<h3>利用 <code class="language-text">flex</code> 布局</h3>\n<p>同前一节所述。</p>\n<h2>总结</h2>\n<p>对于竖直居中问题，在知道子元素 <code class="language-text">width</code>、<code class="language-text">height</code> 等属性的情况下，一般可以通过绝对定位的方式解决。</p>\n<p>如果这些属性未知，一般采用其他布局方式，其中：</p>\n<ul>\n<li><code class="language-text">table</code> 和伪元素对齐浏览器支持都不错（IE8+，IE7 不支持伪元素和 CSS <code class="language-text">table</code>）；</li>\n<li><code class="language-text">flex</code> 需要加前缀处理。</li>\n</ul>\n<h2>参考资料</h2>\n<ul>\n<li><a href="http://lea.verou.me/">Verou, Lea. <em>CSS Secrets: Better Solutions to Everyday Web Design Problems</em>. 1st ed. 2015.</a></li>\n<li><a href="https://css-tricks.com/centering-css-complete-guide/">Centering in CSS: A Complete Guide</a></li>\n<li><a href="https://css-tricks.com/centering-in-the-unknown/">Centering in the Unknown</a></li>\n<li><a href="http://f2e.souche.com/blog/jie-du-cssbu-ju-zhi-shui-ping-chui-zhi-ju-zhong/">解读 CSS 布局之 - 水平垂直居中</a></li>\n<li><a href="https://hacks.mozilla.org/2015/03/understanding-inline-box-model/">Understanding the CSS box model for inline elements</a></li>\n<li><a href="https://www.w3.org/TR/CSS2/visuren.html#inline-formatting">Visual formatting model, Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification</a></li>\n<li><a href="http://www.itkaoyan.cn/?p=709">彻底理解 CSS 中的 BFC</a></li>\n<li><a href="http://stackoverflow.com/questions/1232096/how-to-horizontally-center-a-floating-element-of-a-variable-width">Stack Overflow: How to horizontally center a floating element of a variable width</a></li>\n<li><a href="https://www.w3.org/Style/Examples/007/center.en.html">Centering things</a></li>\n</ul>',frontmatter:{title:"CSS 居中小结",date:"February 28, 2016"}}},pathContext:{slug:"/centering-in-css/",previous:null,next:{fields:{slug:"/flatmap/"},frontmatter:{title:"谈谈 `flatMap`"}}}}}});
//# sourceMappingURL=path---centering-in-css-59fa7bfe75609836de0d.js.map