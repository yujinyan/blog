---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import DefaultLayout from "@/layouts/DefaultLayout.astro";
import MyAvatarOverline from "@/components/MyAvatarOverline.astro";
import { type BookStatus } from "../content/config.ts";

const books = await getCollection("book");
const booksByStatus: Map<BookStatus, (typeof books)[number][]> = groupBy(
    books,
    (book) => book.data.status,
);
const sections: { title: string; data?: (typeof books)[number][] }[] = [
    { title: "已读 | Done", data: booksByStatus.get("done") },
    { title: "想读 | Planned", data: booksByStatus.get("planned") },
];

/**
 * https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects
 * @description
 * Takes an Array<V>, and a grouping function,
 * and returns a Map of the array grouped by the grouping function.
 *
 * @param list An array of type V.
 * @param keyGetter A Function that takes the the Array type V as an input, and returns a value of type K.
 *                  K is generally intended to be a property key of V.
 *
 * @returns Map of the array grouped by the grouping function.
 */
function groupBy<V, K>(list: V[], keyGetter: (item: V) => K): Map<K, V[]> {
    const map = new Map<K, V[]>();
    list.forEach((item) => {
        const key = keyGetter(item);
        const collection = map.get(key);
        if (!collection) {
            map.set(key, [item]);
        } else {
            collection.push(item);
        }
    });
    return map;
}
---

<DefaultLayout
    lang="zh-cmn-Hans"
    title={"我的书架"}
    pathname={Astro.url.pathname}
    description={"A collection of books I've read"}
>
    <MyAvatarOverline slot="header" />
    {
        sections.map((section) => (
            <div>
                <h2 class="mb-4 mt-8 font-heading">{section.title}</h2>
                <div class="flex items-end flex-wrap gap-4">
                    {(section.data ?? []).map((book) => {
                        const postSlug = book.data.post?.slug;

                        return (
                            <div class="hover:scale-110 hover:z-50 transition-transform">
                                <a
                                    href={
                                        postSlug
                                            ? `posts/${postSlug}`
                                            : undefined
                                    }
                                    style={{ textDecoration: "none" }}
                                >
                                    <Image
                                        transition:name={`book-${book.id}}`}
                                        width={256}
                                        src={book.data.cover}
                                        class="rounded shadow-xl xl:w-48 w-36 ring-1 ring-base-content/20"
                                        alt={book.data.title}
                                    />
                                </a>
                            </div>
                        );
                    })}
                </div>
            </div>
        ))
    }
</DefaultLayout>
